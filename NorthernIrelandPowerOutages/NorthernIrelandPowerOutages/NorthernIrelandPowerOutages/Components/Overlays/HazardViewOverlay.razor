@using Infrastructure.Data
@inject ApplicationDbContext DbContext
@inject IConfiguration config

<div class="overlay">
    <div class="overlay-content">

        <h1>Hazard Details</h1>

        @if (Hazard != null)
        {
            <div>
                <label for="title" class="form-label fw-bold">Title</label>
                <p id="title" class="form-control-plaintext">@Hazard.Title</p>
            </div>
            <div class="mt-3">
                <label for="description" class="form-label fw-bold">Description</label>
                <p id="description" class="form-control-plaintext">@Hazard.Description</p>
            </div>

            @if (Hazard.Images != null && Hazard.Images.Any())
            {
                <div class="mt-4">
                    <label class="form-label fw-bold">Images</label>
                    <div id="hazardImagesCarousel" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-inner">
                            @foreach (var image in Hazard.Images)
                            {
                                <div class="carousel-item @(Hazard.Images.IndexOf(image) == 0 ? "active" : "")">
                                    <img src="@GetImagePreviewUrl(image.FileName)" class="d-block w-100 img-fluid rounded" alt="@Hazard.Title">
                                </div>
                            }
                        </div>
                        @if (Hazard.Images.Count > 1)
                        {
                            <button class="carousel-control-prev" type="button" data-bs-target="#hazardImagesCarousel" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#hazardImagesCarousel" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        }
                    </div>
                </div>
            }
            else
            {
                <p class="mt-3 text-muted">No images available for this hazard.</p>
            }

            @* Example of displaying other read-only properties if they exist on your Hazard entity *@
            @*
            <div class="mt-3">
                <label class="form-label fw-bold">Location</label>
                <p class="form-control-plaintext">@Hazard.Latitude, @Hazard.Longitude</p>
            </div>
            <div class="mt-3">
                <label class="form-label fw-bold">Reported On</label>
                <p class="form-control-plaintext">@Hazard.ReportedDate.ToShortDateString()</p>
            </div>
            *@

        }
        else
        {
            <p>Loading hazard details...</p>
        }

        <button class="btn btn-secondary mt-4" @onclick="CloseOverlay">Close</button>
    </div>
</div>

<style>
    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0,0,0,0.5);
        z-index: 9999;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .overlay-content {
        background-color: white;
        padding: 2rem;
        border-radius: 8px;
        max-width: 600px; /* Limit the width for better readability */
        width: 90%;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        max-height: 90vh; /* Allow scrolling if content is too long */
        overflow-y: auto;
    }

    /* Adjust carousel image size if needed */
    .carousel-item img {
        max-height: 400px; /* Example max height for carousel images */
        object-fit: contain; /* Ensures the whole image is visible, scales down if needed */
    }
</style>