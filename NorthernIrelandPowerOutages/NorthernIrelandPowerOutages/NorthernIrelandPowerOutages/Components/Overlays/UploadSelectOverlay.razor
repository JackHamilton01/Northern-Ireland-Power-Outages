@using NorthernIrelandPowerOutages.Enums
<div class="add-marker-dialog-overlay" @onclick="CloseOverlay">
    <div class="add-marker-dialog-content" @onclick:stopPropagation="true">
        <h3>Add marker</h3>
        <div class="marker-options">
            <button class="marker-button" @onclick="() => OnMarkerTypeSelected.InvokeAsync(UploadType.Hazard)">
                <span class="icon hazard-icon"></span>
                Hazard
            </button>
            <button class="marker-button" @onclick="() => OnMarkerTypeSelected.InvokeAsync(UploadType.Service)">
                <span class="icon service-icon"></span>
                Service
            </button>
        </div>
    </div>
</div>

<style>
    .add-marker-dialog-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.6); 
        display: flex; 
        justify-content: center;
        align-items: center;
        z-index: 1000; 
    }

    .add-marker-dialog-content {
        background-color: #333;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); 
        text-align: center;
        color: #fff; 
        max-width: 350px; 
        width: 90%; 
        font-family: Arial, sans-serif;
    }

        .add-marker-dialog-content h3 {
            margin-top: 0;
            margin-bottom: 20px;
            font-size: 1.5em;
            color: #eee; 
        }

    .marker-options {
        display: flex;
        justify-content: space-around;
        gap: 15px; 
    }

    .marker-button {
        background-color: #555; 
        border: none;
        border-radius: 8px;
        padding: 15px;
        width: 120px; 
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        color: #fff;
        font-size: 1.1em;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .marker-button:hover {
            background-color: #666; 
        }

    .icon {
        display: inline-block;
        width: 60px;
        height: 60px; 
        background-size: contain;
        background-repeat: no-repeat;
        background-position: center;
        margin-bottom: 10px; 
    }

    .hazard-icon {
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23CCC"><path d="M12 1L1 21h22L12 1zm0 17c-0.552 0-1-0.448-1-1s0.448-1 1-1 1 0.448 1 1-0.448 1-1 1zm0-4c-0.552 0-1-0.448-1-1V9c0-0.552 0.448-1 1-1s1 0.448 1 1v4c0 0.552-0.448 1-1 1z"/></svg>');
    }

    .service-icon {
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23CCC"><path d="M12 2c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0 14c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/></svg>');
    }
</style>

@code {
    [Parameter]
    public EventCallback<UploadType> OnMarkerTypeSelected { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    private void CloseOverlay() => OnClose.InvokeAsync();

}
